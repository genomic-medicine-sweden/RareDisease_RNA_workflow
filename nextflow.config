
manifest {
    nextflowVersion = '>=21.10'
    description = 'RNA pipe for the GMS-RD-RNA project'
}

process {
    executor = 'local'
    cpus = 6
    memory = "35GB"
    time = "1d"
    // Capture exit codes from upstream processes when piping
    shell = ['/bin/bash', '-euo', 'pipefail']
}

params {
    //add path to your reference catalog
    reference_dir = "/home/proj/stage/rare-disease/references/references_10.0"

    output = "${projectDir}/results"

    platform='ILLUMINA'

    // Choose between <GRCh37> and <GRCh38>
    genome = 'GRCh37'

    // Star reference directory path
    star_index="${reference_dir}/${genome.toLowerCase()}_homo_sapiens_-gencode_pri-.fasta_star_genome_dir/"

    // Reference genome fasta, indexed using picard and samtools
    fasta="${reference_dir}/${genome.toLowerCase()}_homo_sapiens_-gencode_pri-.fasta"

    // Will be built if missing
    annotation_refflat="${reference_dir}/${genome.toLowerCase()}_gencode_annotation_-v37-.gtf.refflat"

    // gtf file for stringtie and drop
     gtf="${reference_dir}/${genome.toLowerCase()}_gencode_annotation_-v37-.gtf"

    // Strandedness of the data, <empty>/forward/reverse )
    strandedness = 'reverse'

    rrna_intervals = "${reference_dir}/${genome.toLowerCase()}_gencode_annotation_-v37-.gtf.rrna.interval_list"

    // Bed file with regions to downsample
    downsample_regions = "${projectDir}/resources/${genome.toLowerCase()}_hemoglobin.bed"

    // path to VEP cache
    vep_cache = "${reference_dir}/ensembl-tools-release-104/cache"

    // Reference count file for drop
    reference_count_file = "${reference_dir}/gms_blood_counts.tsv"

    variantcaller = 'bcftools'

    run_drop_ae = false

}

includeConfig 'conf/modules.config'

profiles {
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
    }
    test {
        includeConfig 'conf/modules.config'
        includeConfig 'conf/test.config'
    }
    hasta {
        includeConfig 'conf/modules.config'
        includeConfig 'conf/hasta.config'
    }
    dev_priority {
        params {
            priority = 'development'
            clusterOptions = "--qos=low"
        }
    }
    prod_priority {
        params {
            priority = 'production'
            clusterOptions = "--qos=low"
        }
    }
}

// Load modules.config for DSL2 module specific options

trace {
    fields = 'task_id,hash,name,status,tag'
}
