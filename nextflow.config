
manifest {
    nextflowVersion = '>=21.10'
    description = 'RNA pipe for the GMS-RD-RNA project'
}

process {
    executor = 'local'
    cpus = 6
    memory = "35GB"
    time = "1d"
}

params {
    //add path to your reference catalog
    reference_dir='/a/path'

    output = './results'

    platform='ILLUMINA'

    // Utilize nf-core custom profiles 
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/master"

    // Star reference directory path
    star_index="${reference_dir}/grch38_homo_sapiens_-gencode_pri-.fasta_star_genome_dir/"

    // Reference genome fasta, indexed using picard and samtools
    fasta="${reference_dir}/grch38_homo_sapiens_-gencode_pri-.fasta"

    // Will be built if missing
    annotation_refflat="${reference_dir}/grch38_gencode_annotation_-v37-.gtf.refflat"

    // gtf file for stringtie
     gtf="${reference_dir}/grch38_gencode_annotation_-v37-.gtf"

    // Strandedness of the data, <empty>/forward/reverse )
    strandedness = 'reverse'

    rrna_intervals = false

    // Bed file with regions to downsample
    downsample_regions = './resources/grch38_hemoglobin.bed'

    // path to VEP cache
    vep_cache = "${reference_dir}/ensembl-tools-release-104/cache"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

profiles {
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
    }
    test {
        includeConfig 'conf/test.config'
    }
}

trace {
    fields = 'task_id,hash,name,status,tag'
}
